name: Dotnet All In One
description:
  A GitHub Action for .NET projects that automates migrations, tests,
  versioning, Docker image building, and release management.
author: Mario De Benedictis (mariodbx)

branding:
  icon: heart
  color: purple

inputs:
  # General
  home_directory:
    description: 'Home directory for the action'
    required: false
    default: '/home/node'
  # use_global_dotnet_ef:
  #   description: 'Use globally installed dotnet-ef instead of local'
  #   required: false
  #   default: 'false'
  dotnet_root:
    description: 'Path to the .NET root directory'
    required: false
    default: '/usr/bin/dotnet'
  project_directory_root:
    description: 'Path to the project directory'
    required: false
    default: '.'

  # Migrations
  run_migrations:
    description: 'Run migrations? (true/false)'
    required: false
    default: 'false'
  migrations_folder:
    description: 'Path to the migrations folder (default: testFolder)'
    required: false
    default: '.'
  migrations_env_name:
    description: 'Environment name for ASP.NET Core'
    required: false
    default: 'Development'
  on_failed_rollback_migrations:
    description: 'Rollback migrations if something fail? (true/false)'
    required: false
    default: 'true'

  # Tests
  run_tests:
    description: 'Run tests? (true/false)'
    required: false
    default: 'false'
  tests_env_name:
    description: 'Environment name for ASP.NET Core'
    required: false
    default: 'Test'
  run_tests_migrations:
    description: 'Run tests on migrations? (true/false)'
    required: false
    default: 'true'
  test_migrations_folder:
    description: 'Path to the test migrations folder'
    required: false
    default: ''
  test_folder:
    description: 'Path to the test project folder'
    required: true
    default: ''
  upload_tests_results:
    description: 'Upload test results? (true/false)'
    required: false
    default: 'true'
  test_output_folder:
    description: 'Path to the test results output folder'
    required: false
    default: 'TestResults'
  test_format:
    description: 'Format for test results (e.g., trx, html, json)'
    required: false
    default: 'html'
  rollback_migrations_on_test_failed:
    description: 'Rollback migrations if tests fail'
    required: false
    default: 'true'

  # Versioning
  run_versioning:
    description: 'Run versioning step? (true/false)'
    required: false
    default: 'false'
  csproj_depth:
    description: 'Maximum depth for locating the .csproj file.'
    required: false
    default: '5'
  csproj_name:
    description: 'Name pattern for the .csproj file (e.g., "*.csproj").'
    required: false
    default: ''
  use_commit_message:
    description: 'Use the commit message to extract the version? (true/false)'
    required: false
    default: 'false'
  commit_user:
    description: 'The Git commit username'
    required: false
    default: 'github-actions'
  commit_email:
    description: 'The Git commit email'
    required: false
    default: 'github-actions@users.noreply.github.com'
  commit_message_prefix:
    description: 'Prefix for the commit message'
    required: false
    default: 'New Version: bump version to '

  # Docker
  run_docker_build:
    description: 'Run Docker build step? (true/false)'
    required: false
    default: 'false'
  run_docker_push:
    description: 'Run Docker push step? (true/false)'
    required: false
    default: 'false'
  docker_compose_files:
    description:
      'Comma-separated list of Docker Compose files to build images from
      (optional).'
    required: false
    default: ''
  images:
    description:
      'Comma-separated list of image repositories (used with Docker Compose
      builds).'
    required: false
    default: ''
  dockerfiles:
    description:
      'Comma-separated list of Dockerfile paths (for Dockerfile builds,
      optional).'
    required: false
    default: ''
  dockerfile_images:
    description:
      'Comma-separated list of image names corresponding to each Dockerfile.'
    required: false
    default: ''
  dockerfile_contexts:
    description:
      'Comma-separated list of build contexts for each Dockerfile (defaults to
      "." if not provided).'
    required: false
    default: ''
  registry_type:
    description: 'Type of container registry (e.g., ghcr, acr, dockerhub).'
    required: false
    default: 'GHCR'
  push_with_version:
    description: 'Push images tagged with the version? (true/false)'
    required: false
    default: 'true'
  push_with_latest:
    description: 'Push images tagged as latest? (true/false)'
    required: false
    default: 'true'
  # Publish

  run_publish:
    description: 'Run publish step? (true/false)'
    required: false
    default: 'false'
  publish_linux:
    description: 'Flag to publish .NET binaries for Linux.'
    required: false
    default: 'false'
  publish_windows:
    description: 'Flag to publish .NET binaries for Windows.'
    required: false
    default: 'false'
  publish_mac:
    description: 'Flag to publish .NET binaries for macOS.'
    required: false
    default: 'false'

  # Release
  run_release:
    description: 'Run release step? (true/false)'
    required: false
    default: 'false'
  include_ghcr_package:
    description: 'Include GHCR package in the release changelog? (true/false)'
    required: false
    default: 'true'
  include_dotnet_binaries:
    description: 'Include .NET binaries in the release changelog? (true/false)'
    required: false
    default: 'true'

  # Changelog
  run_changelog:
    description: 'Run changelog step? (true/false)'
    required: false
    default: 'false'
  major_keywords:
    description: 'Comma-separated list of keywords to detect major changes.'
    required: false
    default: 'breaking, overhaul'
  minor_keywords:
    description: 'Comma-separated list of keywords to detect minor changes.'
    required: false
    default: 'feature, enhancement'
  patch_keywords:
    description:
      'Comma-separated list of keywords to detect patch or bug fix changes.'
    required: false
    default: 'bug-fix, hotfix, patch'
  hotfix_keywords:
    description: 'Comma-separated list of keywords to detect hotfix changes.'
    required: false
    default: 'urgent, hotfix'
  added_keywords:
    description: 'Comma-separated list of keywords to detect additions.'
    required: false
    default: 'added, new'
  dev_keywords:
    description:
      'Comma-separated list of keywords to detect development changes.'
    required: false
    default: 'dev, experiment'

  # Format
  run_format:
    description: 'Run code formatting step? (true/false)'
    required: false
    default: 'false'
  format_directory:
    description: 'Directory to format code in.'
    required: false
    default: '.'

  # Husky
  run_husky_setup:
    description: 'Run Husky setup step? (true/false)'
    required: false
    default: 'true'

outputs:
  # Migrations
  lastMigration:
    description: 'The last applied database migration.'

  # Tests
  startTime:
    description: 'Time when the workflow started.'
  endTime:
    description: 'Time when the workflow finished.'
  test_results_uploaded:
    description: 'Indicates if the test results were successfully uploaded.'
  test_output_folder:
    description: 'Path to the test results output folder.'
  upload_tests_results:
    description: 'Indicates if the test results were successfully uploaded.'

  # Versioning
  version:
    description: 'Extracted version from .csproj or commit message.'
  current_version:
    description: 'The current version before the bump.'
  new_version:
    description: 'The new version after the bump.'
  bump_type:
    description: 'The type of version bump (major, minor, patch).'
  skip_release:
    description: 'Indicates if the release should be skipped.'

  # Docker
  docker_push_status:
    description: 'Status of Docker image push (success/failure).'

  # Release
  release_status:
    description: 'Status of the release creation (success/failure).'

  # Changelog
  changelog:
    description: 'Generated changelog for the release.'
  skip:
    description: 'Flag indicating whether to skip the changelog process.'

runs:
  using: node20
  main: dist/index.js
